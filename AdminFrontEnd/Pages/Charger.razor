@page "/Charger/{id:int}"
@using WebApplication1.Shared
@using HttpClients.ClientInterface
@inject DAO dao
@inject IChargingTaskService chargerTaskService

<div class="container mt-3">
    <h2 class="mb-3">Oplader ID: @Id</h2>

    <div class="mb-3">
        <label for="batteryPercentage" class="form-label">Batteri %</label>
        <input type="number" id="batteryPercentage" class="form-control" min="0" max="100" @bind="BatteryPercentage"/>
    </div>

    <div class="mb-3">
        <label for="truckType" class="form-label">Truck type</label>
        <select id="truckType" class="form-select" @bind="SelectedTruckType">
            @foreach (var truckType in TruckTypes)
            {
                <option value="@truckType.TruckTypeId">@truckType.Model</option>
            }
        </select>
    </div>

    <button class="btn btn-primary" @onclick="onConfirm">Bekr√¶ft</button>

    @if (!string.IsNullOrWhiteSpace(successMessage))
    {
        <div class="alert alert-success mt-3" role="alert">
            @successMessage
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    public int BatteryPercentage;
    public int SelectedTruckType;
    public string successMessage;
    public List<TruckType> TruckTypes;
    
    protected override async Task OnInitializedAsync()
    {
        TruckTypes = await dao.GetTruckTypes();
    }
    
    
    public void onConfirm()
    {
        Console.WriteLine("button working");
        ChargingTask newChargingTask = new ChargingTask
        {
            ChargerId = Id,
            BatteryPercentage = BatteryPercentage,
            TruckType = SelectedTruckType,
        };

        try
        {
            chargerTaskService.CreateAsync(newChargingTask);
            successMessage = "Truck successfully set for charging";
        }
        catch(Exception e)
        {
            Console.WriteLine(e);
            successMessage = e.Message;
        }
        
        
    }

}